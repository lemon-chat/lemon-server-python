# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Contact

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GroupContact(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsGroupContact(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GroupContact()
        x.Init(buf, n + offset)
        return x

    # GroupContact
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GroupContact
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # GroupContact
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GroupContact
    def Member(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Lemon.Contact.UserContact import UserContact
            obj = UserContact()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # GroupContact
    def MemberLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GroupContact
    def MemberIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def GroupContactStart(builder): builder.StartObject(3)
def GroupContactAddId(builder, id): builder.PrependUint32Slot(0, id, 0)
def GroupContactAddName(builder, name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def GroupContactAddMember(builder, member): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(member), 0)
def GroupContactStartMemberVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def GroupContactEnd(builder): return builder.EndObject()
