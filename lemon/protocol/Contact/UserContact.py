# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Contact

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserContact(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsUserContact(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserContact()
        x.Init(buf, n + offset)
        return x

    # UserContact
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserContact
    def Username(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserContact
    def Nickname(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserContact
    def Gender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserContact
    def AvatarType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserContact
    def Avatar(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def UserContactStart(builder): builder.StartObject(5)
def UserContactAddUsername(builder, username): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(username), 0)
def UserContactAddNickname(builder, nickname): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(nickname), 0)
def UserContactAddGender(builder, gender): builder.PrependUint8Slot(2, gender, 0)
def UserContactAddAvatarType(builder, avatarType): builder.PrependUint8Slot(3, avatarType, 0)
def UserContactAddAvatar(builder, avatar): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(avatar), 0)
def UserContactEnd(builder): return builder.EndObject()
